!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BigInteger	BigInteger模板.cpp	/^    BigInteger(char*, int);$/;"	p	class:BigInteger	file:	access:public	signature:(char*, int)
BigInteger	BigInteger模板.cpp	/^    BigInteger(int);$/;"	p	class:BigInteger	file:	access:public	signature:(int)
BigInteger	BigInteger模板.cpp	/^BigInteger::BigInteger(char* str, int slen = -1) {$/;"	f	class:BigInteger	signature:(char* str, int slen = -1)
BigInteger	BigInteger模板.cpp	/^BigInteger::BigInteger(int e = 0) {$/;"	f	class:BigInteger	signature:(int e = 0)
BigInteger	BigInteger模板.cpp	/^class BigInteger {$/;"	c	file:
BigInteger::BigInteger	BigInteger模板.cpp	/^    BigInteger(char*, int);$/;"	p	class:BigInteger	file:	access:public	signature:(char*, int)
BigInteger::BigInteger	BigInteger模板.cpp	/^    BigInteger(int);$/;"	p	class:BigInteger	file:	access:public	signature:(int)
BigInteger::BigInteger	BigInteger模板.cpp	/^BigInteger::BigInteger(char* str, int slen = -1) {$/;"	f	class:BigInteger	signature:(char* str, int slen = -1)
BigInteger::BigInteger	BigInteger模板.cpp	/^BigInteger::BigInteger(int e = 0) {$/;"	f	class:BigInteger	signature:(int e = 0)
BigInteger::DN	BigInteger模板.cpp	/^    const static int DN = 512;$/;"	m	class:BigInteger	file:	access:private
BigInteger::F	BigInteger模板.cpp	/^    const static int F = 10000, FK = 4;$/;"	m	class:BigInteger	file:	access:private
BigInteger::FK	BigInteger模板.cpp	/^    const static int F = 10000, FK = 4;$/;"	m	class:BigInteger	file:	access:private
BigInteger::add	BigInteger模板.cpp	/^    void add(const BigInteger&);$/;"	p	class:BigInteger	file:	access:private	signature:(const BigInteger&)
BigInteger::add	BigInteger模板.cpp	/^void BigInteger::add(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
BigInteger::format	BigInteger模板.cpp	/^    void format();$/;"	p	class:BigInteger	file:	access:private	signature:()
BigInteger::format	BigInteger模板.cpp	/^void BigInteger::format()$/;"	f	class:BigInteger	signature:()
BigInteger::len	BigInteger模板.cpp	/^    int n[ DN ], len;$/;"	m	class:BigInteger	file:	access:private
BigInteger::lessthan	BigInteger模板.cpp	/^    bool lessthan(const BigInteger&, int) const;$/;"	p	class:BigInteger	file:	access:private	signature:(const BigInteger&, int) const
BigInteger::lessthan	BigInteger模板.cpp	/^bool BigInteger::lessthan(const BigInteger& b, int bg = 0) const {$/;"	f	class:BigInteger	signature:(const BigInteger& b, int bg = 0) const
BigInteger::n	BigInteger模板.cpp	/^    int n[ DN ], len;$/;"	m	class:BigInteger	file:	access:private
BigInteger::negative	BigInteger模板.cpp	/^    bool negative;$/;"	m	class:BigInteger	file:	access:private
BigInteger::operator !=	BigInteger模板.cpp	/^    bool operator !=(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator !=	BigInteger模板.cpp	/^    bool operator !=(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator %	BigInteger模板.cpp	/^    BigInteger operator %(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator %	BigInteger模板.cpp	/^    BigInteger operator %(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator %	BigInteger模板.cpp	/^    friend BigInteger operator %(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
BigInteger::operator %=	BigInteger模板.cpp	/^    void operator %=(const BigInteger& b) {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b)
BigInteger::operator %=	BigInteger模板.cpp	/^    void operator %=(const int& b) {$/;"	f	class:BigInteger	access:public	signature:(const int& b)
BigInteger::operator *	BigInteger模板.cpp	/^    BigInteger operator *(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator *	BigInteger模板.cpp	/^    BigInteger operator *(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator *	BigInteger模板.cpp	/^    friend BigInteger operator *(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
BigInteger::operator *=	BigInteger模板.cpp	/^    void operator *=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
BigInteger::operator *=	BigInteger模板.cpp	/^    void operator *=(const int&);$/;"	p	class:BigInteger	file:	access:public	signature:(const int&)
BigInteger::operator *=	BigInteger模板.cpp	/^void BigInteger::operator *=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
BigInteger::operator *=	BigInteger模板.cpp	/^void BigInteger::operator *=(const int& b) {$/;"	f	class:BigInteger	signature:(const int& b)
BigInteger::operator +	BigInteger模板.cpp	/^    BigInteger operator +(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator +	BigInteger模板.cpp	/^    BigInteger operator +(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator +	BigInteger模板.cpp	/^    friend BigInteger operator +(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
BigInteger::operator ++	BigInteger模板.cpp	/^    BigInteger & operator ++() {$/;"	f	class:BigInteger	access:public	signature:()
BigInteger::operator ++	BigInteger模板.cpp	/^    BigInteger operator ++(int) {$/;"	f	class:BigInteger	access:public	signature:(int)
BigInteger::operator +=	BigInteger模板.cpp	/^    void operator +=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
BigInteger::operator +=	BigInteger模板.cpp	/^    void operator +=(const int& b) {$/;"	f	class:BigInteger	access:public	signature:(const int& b)
BigInteger::operator +=	BigInteger模板.cpp	/^void BigInteger::operator +=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
BigInteger::operator -	BigInteger模板.cpp	/^    BigInteger operator -() {$/;"	f	class:BigInteger	access:public	signature:()
BigInteger::operator -	BigInteger模板.cpp	/^    BigInteger operator -(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator -	BigInteger模板.cpp	/^    BigInteger operator -(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator -	BigInteger模板.cpp	/^    friend BigInteger operator -(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
BigInteger::operator --	BigInteger模板.cpp	/^    BigInteger & operator --() {$/;"	f	class:BigInteger	access:public	signature:()
BigInteger::operator --	BigInteger模板.cpp	/^    BigInteger operator --(int) {$/;"	f	class:BigInteger	access:public	signature:(int)
BigInteger::operator -=	BigInteger模板.cpp	/^    void operator -=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
BigInteger::operator -=	BigInteger模板.cpp	/^    void operator -=(const int& b) {$/;"	f	class:BigInteger	access:public	signature:(const int& b)
BigInteger::operator -=	BigInteger模板.cpp	/^void BigInteger::operator -=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
BigInteger::operator /	BigInteger模板.cpp	/^    BigInteger operator \/(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator /	BigInteger模板.cpp	/^    BigInteger operator \/(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator /	BigInteger模板.cpp	/^    friend BigInteger operator \/(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
BigInteger::operator /=	BigInteger模板.cpp	/^    void operator \/=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
BigInteger::operator /=	BigInteger模板.cpp	/^    void operator \/=(const int&);$/;"	p	class:BigInteger	file:	access:public	signature:(const int&)
BigInteger::operator /=	BigInteger模板.cpp	/^void BigInteger::operator \/=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
BigInteger::operator /=	BigInteger模板.cpp	/^void BigInteger::operator \/=(const int& b) {$/;"	f	class:BigInteger	signature:(const int& b)
BigInteger::operator <	BigInteger模板.cpp	/^    bool operator<(const BigInteger&) const;$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&) const
BigInteger::operator <	BigInteger模板.cpp	/^    bool operator<(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator <	BigInteger模板.cpp	/^bool BigInteger::operator<(const BigInteger& b) const {$/;"	f	class:BigInteger	signature:(const BigInteger& b) const
BigInteger::operator <=	BigInteger模板.cpp	/^    bool operator <=(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator <=	BigInteger模板.cpp	/^    bool operator <=(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator =	BigInteger模板.cpp	/^    BigInteger & operator =(int b) {$/;"	f	class:BigInteger	access:public	signature:(int b)
BigInteger::operator ==	BigInteger模板.cpp	/^    bool operator ==(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator ==	BigInteger模板.cpp	/^    bool operator ==(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator >	BigInteger模板.cpp	/^    bool operator>(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator >	BigInteger模板.cpp	/^    bool operator>(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::operator >=	BigInteger模板.cpp	/^    bool operator >=(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
BigInteger::operator >=	BigInteger模板.cpp	/^    bool operator >=(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
BigInteger::print	BigInteger模板.cpp	/^    void print() const;$/;"	p	class:BigInteger	file:	access:public	signature:() const
BigInteger::print	BigInteger模板.cpp	/^void BigInteger::print() const {$/;"	f	class:BigInteger	signature:() const
BigInteger::sprint	BigInteger模板.cpp	/^    void sprint(char*) const;$/;"	p	class:BigInteger	file:	access:public	signature:(char*) const
BigInteger::sprint	BigInteger模板.cpp	/^void BigInteger::sprint(char* str) const {$/;"	f	class:BigInteger	signature:(char* str) const
BigInteger::sub	BigInteger模板.cpp	/^    void sub(const BigInteger&, int);$/;"	p	class:BigInteger	file:	access:private	signature:(const BigInteger&, int)
BigInteger::sub	BigInteger模板.cpp	/^void BigInteger::sub(const BigInteger& b, int bg = 0) {$/;"	f	class:BigInteger	signature:(const BigInteger& b, int bg = 0)
DN	BigInteger模板.cpp	/^    const static int DN = 512;$/;"	m	class:BigInteger	file:	access:private
F	BigInteger模板.cpp	/^    const static int F = 10000, FK = 4;$/;"	m	class:BigInteger	file:	access:private
FK	BigInteger模板.cpp	/^    const static int F = 10000, FK = 4;$/;"	m	class:BigInteger	file:	access:private
add	BigInteger模板.cpp	/^    void add(const BigInteger&);$/;"	p	class:BigInteger	file:	access:private	signature:(const BigInteger&)
add	BigInteger模板.cpp	/^void BigInteger::add(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
format	BigInteger模板.cpp	/^    void format();$/;"	p	class:BigInteger	file:	access:private	signature:()
format	BigInteger模板.cpp	/^void BigInteger::format()$/;"	f	class:BigInteger	signature:()
len	BigInteger模板.cpp	/^    int n[ DN ], len;$/;"	m	class:BigInteger	file:	access:private
lessthan	BigInteger模板.cpp	/^    bool lessthan(const BigInteger&, int) const;$/;"	p	class:BigInteger	file:	access:private	signature:(const BigInteger&, int) const
lessthan	BigInteger模板.cpp	/^bool BigInteger::lessthan(const BigInteger& b, int bg = 0) const {$/;"	f	class:BigInteger	signature:(const BigInteger& b, int bg = 0) const
main	BigInteger模板.cpp	/^int main() {$/;"	f	signature:()
max	BigInteger模板.cpp	5;"	d	file:
n	BigInteger模板.cpp	/^    int n[ DN ], len;$/;"	m	class:BigInteger	file:	access:private
negative	BigInteger模板.cpp	/^    bool negative;$/;"	m	class:BigInteger	file:	access:private
operator !=	BigInteger模板.cpp	/^    bool operator !=(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator !=	BigInteger模板.cpp	/^    bool operator !=(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator %	BigInteger模板.cpp	/^    BigInteger operator %(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator %	BigInteger模板.cpp	/^    BigInteger operator %(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator %	BigInteger模板.cpp	/^    friend BigInteger operator %(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
operator %=	BigInteger模板.cpp	/^    void operator %=(const BigInteger& b) {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b)
operator %=	BigInteger模板.cpp	/^    void operator %=(const int& b) {$/;"	f	class:BigInteger	access:public	signature:(const int& b)
operator *	BigInteger模板.cpp	/^    BigInteger operator *(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator *	BigInteger模板.cpp	/^    BigInteger operator *(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator *	BigInteger模板.cpp	/^    friend BigInteger operator *(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
operator *=	BigInteger模板.cpp	/^    void operator *=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
operator *=	BigInteger模板.cpp	/^    void operator *=(const int&);$/;"	p	class:BigInteger	file:	access:public	signature:(const int&)
operator *=	BigInteger模板.cpp	/^void BigInteger::operator *=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
operator *=	BigInteger模板.cpp	/^void BigInteger::operator *=(const int& b) {$/;"	f	class:BigInteger	signature:(const int& b)
operator +	BigInteger模板.cpp	/^    BigInteger operator +(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator +	BigInteger模板.cpp	/^    BigInteger operator +(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator +	BigInteger模板.cpp	/^    friend BigInteger operator +(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
operator ++	BigInteger模板.cpp	/^    BigInteger & operator ++() {$/;"	f	class:BigInteger	access:public	signature:()
operator ++	BigInteger模板.cpp	/^    BigInteger operator ++(int) {$/;"	f	class:BigInteger	access:public	signature:(int)
operator +=	BigInteger模板.cpp	/^    void operator +=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
operator +=	BigInteger模板.cpp	/^    void operator +=(const int& b) {$/;"	f	class:BigInteger	access:public	signature:(const int& b)
operator +=	BigInteger模板.cpp	/^void BigInteger::operator +=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
operator -	BigInteger模板.cpp	/^    BigInteger operator -() {$/;"	f	class:BigInteger	access:public	signature:()
operator -	BigInteger模板.cpp	/^    BigInteger operator -(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator -	BigInteger模板.cpp	/^    BigInteger operator -(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator -	BigInteger模板.cpp	/^    friend BigInteger operator -(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
operator --	BigInteger模板.cpp	/^    BigInteger & operator --() {$/;"	f	class:BigInteger	access:public	signature:()
operator --	BigInteger模板.cpp	/^    BigInteger operator --(int) {$/;"	f	class:BigInteger	access:public	signature:(int)
operator -=	BigInteger模板.cpp	/^    void operator -=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
operator -=	BigInteger模板.cpp	/^    void operator -=(const int& b) {$/;"	f	class:BigInteger	access:public	signature:(const int& b)
operator -=	BigInteger模板.cpp	/^void BigInteger::operator -=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
operator /	BigInteger模板.cpp	/^    BigInteger operator \/(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator /	BigInteger模板.cpp	/^    BigInteger operator \/(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator /	BigInteger模板.cpp	/^    friend BigInteger operator \/(int k, const BigInteger& b) {$/;"	f	class:BigInteger	access:friend	signature:(int k, const BigInteger& b)
operator /=	BigInteger模板.cpp	/^    void operator \/=(const BigInteger&);$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&)
operator /=	BigInteger模板.cpp	/^    void operator \/=(const int&);$/;"	p	class:BigInteger	file:	access:public	signature:(const int&)
operator /=	BigInteger模板.cpp	/^void BigInteger::operator \/=(const BigInteger& b) {$/;"	f	class:BigInteger	signature:(const BigInteger& b)
operator /=	BigInteger模板.cpp	/^void BigInteger::operator \/=(const int& b) {$/;"	f	class:BigInteger	signature:(const int& b)
operator <	BigInteger模板.cpp	/^    bool operator<(const BigInteger&) const;$/;"	p	class:BigInteger	file:	access:public	signature:(const BigInteger&) const
operator <	BigInteger模板.cpp	/^    bool operator<(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator <	BigInteger模板.cpp	/^bool BigInteger::operator<(const BigInteger& b) const {$/;"	f	class:BigInteger	signature:(const BigInteger& b) const
operator <=	BigInteger模板.cpp	/^    bool operator <=(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator <=	BigInteger模板.cpp	/^    bool operator <=(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator =	BigInteger模板.cpp	/^    BigInteger & operator =(int b) {$/;"	f	class:BigInteger	access:public	signature:(int b)
operator ==	BigInteger模板.cpp	/^    bool operator ==(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator ==	BigInteger模板.cpp	/^    bool operator ==(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator >	BigInteger模板.cpp	/^    bool operator>(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator >	BigInteger模板.cpp	/^    bool operator>(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
operator >=	BigInteger模板.cpp	/^    bool operator >=(const BigInteger& b) const {$/;"	f	class:BigInteger	access:public	signature:(const BigInteger& b) const
operator >=	BigInteger模板.cpp	/^    bool operator >=(const int& b) const {$/;"	f	class:BigInteger	access:public	signature:(const int& b) const
print	BigInteger模板.cpp	/^    void print() const;$/;"	p	class:BigInteger	file:	access:public	signature:() const
print	BigInteger模板.cpp	/^void BigInteger::print() const {$/;"	f	class:BigInteger	signature:() const
sprint	BigInteger模板.cpp	/^    void sprint(char*) const;$/;"	p	class:BigInteger	file:	access:public	signature:(char*) const
sprint	BigInteger模板.cpp	/^void BigInteger::sprint(char* str) const {$/;"	f	class:BigInteger	signature:(char* str) const
sub	BigInteger模板.cpp	/^    void sub(const BigInteger&, int);$/;"	p	class:BigInteger	file:	access:private	signature:(const BigInteger&, int)
sub	BigInteger模板.cpp	/^void BigInteger::sub(const BigInteger& b, int bg = 0) {$/;"	f	class:BigInteger	signature:(const BigInteger& b, int bg = 0)
